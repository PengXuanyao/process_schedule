!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
BIN_TARGET	makefile	/^BIN_TARGET = ${DIR_BIN}\/${TARGET}$/;"	m
CC	makefile	/^CC = gcc$/;"	m
CFLAGS	makefile	/^CFLAGS = -g -Wall -I${DIR_INC}$/;"	m
DIR_BIN	makefile	/^DIR_BIN = .\/bin$/;"	m
DIR_INC	makefile	/^DIR_INC = .\/inc$/;"	m
DIR_OBJ	makefile	/^DIR_OBJ = .\/obj$/;"	m
DIR_SRC	makefile	/^DIR_SRC = .\/src$/;"	m
F	inc/pro_sch.h	/^	F	\/\/ finish$/;"	e	enum:p_status
MAX_PRIOR	inc/pro_sch.h	7;"	d
OBJ	makefile	/^OBJ = $(patsubst %.c,${DIR_OBJ}\/%.o,$(notdir ${SRC}))$/;"	m
PCB	inc/pro_sch.h	/^typedef struct PCB{$/;"	s
PCB	inc/pro_sch.h	/^}PCB;$/;"	t	typeref:struct:PCB
P_Node	inc/pro_sch.h	/^typedef struct P_Node{$/;"	s
P_Node	inc/pro_sch.h	/^}P_Node;$/;"	t	typeref:struct:P_Node
P_Queue	inc/pro_sch.h	/^typedef struct P_Queue{$/;"	s
P_Queue	inc/pro_sch.h	/^}P_Queue;$/;"	t	typeref:struct:P_Queue
R	inc/pro_sch.h	/^	R,	\/\/ running$/;"	e	enum:p_status
SRC	makefile	/^SRC = $(wildcard ${DIR_SRC}\/*.c)$/;"	m
TARGET	makefile	/^TARGET = main$/;"	m
W	inc/pro_sch.h	/^	W,	\/\/ waiting$/;"	e	enum:p_status
add_p_queue	src/pro_sch.c	/^void add_p_queue(P_Queue* q, PCB pcb){$/;"	f
create_p_queue	src/pro_sch.c	/^P_Queue* create_p_queue(int prior){$/;"	f
create_process	src/pro_sch.c	/^P_Queue** create_process(void){$/;"	f
de_p_queue	src/pro_sch.c	/^PCB de_p_queue(P_Queue* q){$/;"	f
front	inc/pro_sch.h	/^	P_Node* front;$/;"	m	struct:P_Queue
is_empty_q	src/pro_sch.c	/^int is_empty_q(P_Queue* q){$/;"	f
main	src/main.c	/^int main(){$/;"	f
name	inc/pro_sch.h	/^	char name;			\/\/ process name$/;"	m	struct:PCB
np	inc/pro_sch.h	/^	struct P_Node* np;$/;"	m	struct:P_Node	typeref:struct:P_Node::P_Node
p	inc/pro_sch.h	/^	PCB p;$/;"	m	struct:P_Node
p_status	inc/pro_sch.h	/^typedef enum p_status{$/;"	g
p_status	inc/pro_sch.h	/^}p_status;$/;"	t	typeref:enum:p_status
print_q	src/pro_sch.c	/^void print_q(P_Queue* q){$/;"	f
prior	inc/pro_sch.h	/^	int prior;			\/\/ process priority$/;"	m	struct:PCB
prior	inc/pro_sch.h	/^	int prior;$/;"	m	struct:P_Queue
rear	inc/pro_sch.h	/^	P_Node* rear;$/;"	m	struct:P_Queue
run_time	inc/pro_sch.h	/^	int run_time;		\/\/ expected running time$/;"	m	struct:PCB
start_time	inc/pro_sch.h	/^	int start_time; 	\/\/ start time of process$/;"	m	struct:PCB
status	inc/pro_sch.h	/^	p_status status;	\/\/ process status$/;"	m	struct:PCB
test_q	src/pro_sch.c	/^void test_q(void){$/;"	f
use_time	inc/pro_sch.h	/^	int use_time;		\/\/ already used time of cpu occupation$/;"	m	struct:PCB
